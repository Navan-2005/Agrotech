<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>FarmSenseCrop Finder</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary: #2ecc71;
        --primary-dark: #27ae60;
        --secondary: #34495e;
        --light: #ecf0f1;
        --dark: #2c3e50;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Segoe UI", system-ui, -apple-system, sans-serif;
      }

      body {
        background: linear-gradient(135deg, #ffffff 0%, #ffffff 100%);
        color: var(--dark);
        line-height: 2;
        overflow-x: hidden;
      }

      .animated-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        z-index: -1;
        overflow: hidden;
      }

      .floating-leaf {
        position: absolute;
        width: 20px;
        height: 20px;
        background: rgba(46, 204, 113, 0.2);
        clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
        animation: float var(--duration) linear infinite;
        animation-delay: var(--delay);
      }

      @keyframes float {
        0% {
          transform: translate(var(--start-x), -20px) rotate(0deg);
          opacity: 0;
        }
        20% {
          opacity: 0.8;
        }
        80% {
          opacity: 0.8;
        }
        100% {
          transform: translate(var(--end-x), 120vh) rotate(360deg);
          opacity: 0;
        }
      }

      .header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        padding: 1rem 2rem;
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 1000;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
      }

      .header-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .logo {
        display: flex;
        align-items: center;
        gap: 10px;
        text-decoration: none;
        transition: transform 0.3s ease;
      }

      .logo:hover {
        transform: scale(1.05);
      }

      .logo i {
        color: var(--primary);
        font-size: 2rem;
      }

      .logo h1 {
        color: var(--dark);
        font-size: 1.8rem;
        font-weight: 700;
      }

      .navbar {
        display: flex;
        gap: 2rem;
      }

      .navbar a {
        color: var(--secondary);
        text-decoration: none;
        font-weight: 500;
        position: relative;
        padding: 5px 0;
      }

      .navbar a::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 2px;
        background: var(--primary);
        transition: width 0.3s ease;
      }

      .navbar a:hover::after {
        width: 100%;
      }

      .navbar .hii {
        font-weight: 700;
      }

      .hero {
        padding: 8rem 2rem 4rem;
        text-align: center;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
      }

      .hero h2 {
        font-size: 3.5rem;
        color: var(--dark);
        margin-bottom: 1.5rem;
        animation: fadeInUp 1s ease;
      }

      .hero p {
        font-size: 1.2rem;
        color: var(--secondary);
        max-width: 600px;
        margin: 0 auto 2rem;
        animation: fadeInUp 1s ease 0.2s;
      }

      .crop-finder {
        background: white;
        padding: 2rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        display: inline-block;
        animation: fadeInUp 1s ease 0.4s;
        transition: transform 0.3s ease;
      }

      .search-container {
        display: flex;
        gap: 10px;
        align-items: center;
      }

      .crop-finder {
        background: white;
        padding: 2rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        max-width: 1000px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
        animation: fadeInUp 1s ease 0.4s;
        transition: transform 0.3s ease;
      }

      .crop-finder:hover {
        transform: translateY(-5px);
      }

      .search-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .search-box {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        font-size: 1.5rem;
        width: 30rem;
      }

      .search-box i {
        position: absolute;
        left: 15px;
        color: #95a5a6;
        font-size: 1.2rem;
        top: 50%; 
        transform: translateY(-50%);
      }

      .search-box input {
        width: 100%;
        padding: 0.8rem 1rem 0.8rem 2.5rem;
        border: 1px solid #ddd;
        border-radius: 10px;
        outline: none;
        min-height: 3rem;
        font-size: 1rem;
        resize: vertical; 
        overflow-wrap: break-word; 
        word-wrap: break-word;
        white-space: pre-wrap; 
      }

      .search-box input::placeholder {
        color: #ccc;
        font-size: 0.9rem;
      }

      .search-box i {
        top: 50%;
        transform: translateY(-50%);
      }

      .crop-finder input {
        width: 100%;
        padding: 15px 15px 15px 45px;
        border: 2px solid var(--light);
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .crop-finder input:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.2);
      }

   

     

    .button1 {
     display: flex;
     gap: 10px; 
     }

     .btn {
      padding: 15px 30px;
      background-color: var(--primary);
      color: white;
      border: none;
      border-radius: 12px;
      font-size: 1rem;
     font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 8px;
}

.btn i {
  font-size: 1.2em;
}

.btn:hover {
  background-color: darken(var(--primary), 10%);
  transform: scale(1.05);
}

.btn:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.2);
}


      .crop-finder button:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
      }

      .features {
        max-width: 1200px;
        margin: 4rem auto;
        padding: 0 2rem;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        position: relative;
      }

      .feature-card {
        background: white;
        padding: 2rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        transform-style: preserve-3d;
        perspective: 1000px;
      }

      .feature-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 5px;
        background: var(--primary);
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.3s ease;
      }

      .feature-card:hover::before {
        transform: scaleX(1);
      }

      .feature-card i {
        font-size: 2.5rem;
        color: var(--primary);
        margin-bottom: 1.5rem;
        transition: transform 0.3s ease;
      }

      .feature-card:hover i {
        animation: bounce 0.5s ease;
      }

      .feature-card h3 {
        color: var(--dark);
        font-size: 1.5rem;
        margin-bottom: 1rem;
      }

      .feature-card p {
        color: var(--secondary);
        line-height: 1.7;
      }
      .footer {
        background: var(--dark);
        color: white;
        padding: 3rem 2rem;
        margin-top: auto;
      }

      .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
      }

      .footer-section h3 {
        color: var(--primary);
        margin-bottom: 1rem;
        font-size: 1.2rem;
      }

      .footer-section p {
        color: var(--light);
        margin-bottom: 1rem;
      }

      .social-links {
        display: flex;
        gap: 1rem;
      }

      .social-links a {
        color: white;
        text-decoration: none;
        font-size: 1.5rem;
        transition: color 0.3s ease;
      }

      .social-links a:hover {
        color: var(--primary);
      }

      .footer-links {
        list-style: none;
      }

      .footer-links li {
        margin-bottom: 0.5rem;
      }

      .footer-links a {
        color: var(--light);
        text-decoration: none;
        transition: color 0.3s ease;
      }

      .footer-links a:hover {
        color: var(--primary);
      }

      .copyright {
        text-align: center;
        padding-top: 2rem;
        color: var(--light);
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        margin-top: 2rem;
      }

      @keyframes bounce {
        0%,
        100% {
          transform: translateY(0);
        }
        50% {
          transform: translateY(-10px);
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @media (max-width: 768px) {
        .header {
          padding: 1rem;
        }

        .navbar {
          display: none;
        }

        .hero h2 {
          font-size: 2.5rem;
        }

        .hero p {
          font-size: 1.1rem;
        }

        .search-container {
          flex-direction: column;
        }

        .crop-finder button {
          width: 100%;
          justify-content: center;
        }
        .footer-content {
          grid-template-columns: 1fr;
          text-align: center;
        }

        .social-links {
          justify-content: center;
        }
      }

   
.additional-info {
  display: flex; 
  margin-top: 20px;
  padding: 20px;
  text-align: center;
  background-color: #f9f9f9;
  border-radius: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.additional-info .info-box {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        font-size: 1.2rem;
        max-width: 30rem;
      } 

.info-box {
  margin-bottom: 15px;
  margin-right: 50%;
}

.info-box input {
  width: 100%;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 1rem;
}


:root {
  --primary1: #27ae60; 
}

.button2 {
  display: flex;
  gap: 10px;
  justify-content: center; 
}

.btn1 {
  padding: 15px 30px;
  background-color: var(--primary1);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 8px;
}

.btn1 i {
  font-size: 1.2em;
}

.btn1:hover {
  background-color: #1e9548; 
  transform: scale(1.05);
}

.btn1:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.2);
}
#button2{
  margin-top: 5px;
}


    </style>
  </head>
  <body>
    <div id="google_translate_element"></div>

    <div class="animated-background" id="animated-background"></div>

    <header class="header">
      <div class="header-content">
        <a href="#" class="logo">
          <i class="fas fa-leaf"></i>
          <h1>FarmSense</h1>
        </a>
        <nav class="navbar">
          <a class="hii">Home</a>
          <a href="#">About</a>
          <a href="#">Services</a>
          <a href="/contact">Contact</a>
        </nav>
      </div>
    </header>

    <section class="hero">
      <h2>
        <i class="fa-solid fa-tractor" style="color: #27ae60"></i> Smart Farming
        Starts Here
      </h2>
      <p>
        Discover the perfect crops for your land using our advanced soil
        analysis and climate data technology.
      </p>
      <form action="/home" method="post"></form>
      <!-- <div class="crop-finder">
        <div class="search-container">
          <div class="search-box">
            <i id="Location" class="fa-solid fa-location-dot" style="color: #27ae60"></i>
            <label for="location" >location</label>
            <input id="Location" name="Location" placeholder="Enter your City here" required\></input>
          </div>
    
        </div>
        
        <div class="button1">
          <button id="Live" class="btn">
            <i class="fa-solid fa-location-arrow"></i>
            Get Live Location
          </button>
          <button type="submit" class="btn" >
            <i class="fa fa-rocket"></i>
            More details
          </button>
        </div>
      </div> -->
    
      <div class="additional-info" id="additional-info" style="display: none;">
        <div class="info-box">
          <input id="Nitrogen" type="text" placeholder="Nitrogen" required="true" />
        </div>
        <div class="info-box">
          <input id="Phosphorus" type="text" placeholder="Phosphorus" required="true" />
        </div>
        <div class="info-box">
          <input id="Potassium" type="text" placeholder="Potassium"  required="true"/>
        </div>
        <div class="info-box">
          <input id="Soil-PH" type="text" placeholder="Soil PH" required="true"/>
        </div>
      
      <div class="button2">
        <button type="submit" id="button"  class="btn1">
            <i class="fa fa-rocket"></i>
            Find Crops
          </button>
      </div>
      <div class="button2" margin-top:5px>
        <button id="button2" type="button" id="button"  class="btn1">
            <i class="fa fa-rocket"></i>
            Next
          </button>
      </div>
    </div>
  </form>
    </section>
    

   
    
    

    <footer class="footer">
      <div class="footer-content">
        <div class="footer-section">
          <h3>About FarmSense</h3>
          <p>
            FarmSense is dedicated to providing farmers with innovative tools
            and solutions for better crop management and agriculture.
          </p>
        </div>
        <div class="footer-section">
          <h3>Quick Links</h3>
          <ul class="footer-links">
            <li><a href="#">About</a></li>
            <li><a href="/contact">Contact</a></li>
            <li><a href="https://gecsamastipur.org.in/">LearnSoil</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Follow Us</h3>
          <div class="social-links">
            <!-- <a href="#"><i class="fab fa-facebook-f"></i></a>
            <a href="#"><i class="fab fa-twitter"></i></a>
            <a href="#"><i class="fab fa-linkedin-in"></i></a> -->
            <a href="https://www.instagram.com/farm.sense/profilecard/?igsh=aTNjaXdud2JpMmVy"><i class="fab fa-instagram"></i></a>
          </div>
        </div>
      </div>
      <div class="copyright">
        <p>&copy; 2024 FarmSense</p>
      </div>
    </footer>
    <script>
    // Create floating leaves background
    function createLeaves() {
      const background = document.getElementById("animated-background");
      const numberOfLeaves = 30;
    
      for (let i = 0; i < numberOfLeaves; i++) {
        const leaf = document.createElement("div");
        leaf.className = "floating-leaf";
    
        // Random starting position across the width of the screen
        const startX = Math.random() * 100;
        // Random ending position ±20% from start
        const endX = startX + (Math.random() * 40 - 20);
    
        // Random duration between 10-20 seconds
        const duration = 10 + Math.random() * 10;
        // Random delay so they don't all start at once
        const delay = Math.random() * 10;
    
        leaf.style.setProperty("--start-x", `${startX}vw`);
        leaf.style.setProperty("--end-x", `${endX}vw`);
        leaf.style.setProperty("--duration", `${duration}s`);
        leaf.style.setProperty("--delay", `-${delay}s`);
    
        // Random initial position
        leaf.style.left = `${startX}vw`;
        leaf.style.top = `-20px`;
    
        background.appendChild(leaf);
      }
    }
    
    // Add 3D tilt effect to feature cards
    function addTiltEffect() {
      const cards = document.querySelectorAll(".feature-card");
    
      cards.forEach((card) => {
        card.addEventListener("mousemove", (e) => {
          const rect = card.getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;
    
          const centerX = rect.width / 2;
          const centerY = rect.height / 2;
    
          const rotateX = (y - centerY) / 20;
          const rotateY = (centerX - x) / 20;
    
          card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.05)`;
        });
    
        card.addEventListener("mouseleave", () => {
          card.style.transform = "perspective(1000px) rotateX(0) rotateY(0) scale(1)";
        });
      });
    }
    
    // Initialize animations
    document.addEventListener("DOMContentLoaded", () => {
      createLeaves();
      addTiltEffect();
    });
    
    // Recreate leaves when they've all completed their animation
    setInterval(() => {
      const background = document.getElementById("animated-background");
      background.innerHTML = "";
      createLeaves();
    }, 20000);
    
    // Toggle additional info section
    document.addEventListener('DOMContentLoaded', function () {
  const toggleButton = document.querySelector('.btn[onclick="toggleAdditionalInfo()"]');
  const additionalInfo = document.getElementById('additional-info');

  document.getElementById('button').addEventListener('click', function() {
    const nitrogen = document.getElementById('Nitrogen').value;
    const phosphorus = document.getElementById('Phosphorus').value;
    const potassium = document.getElementById('Potassium').value;
    const soilPH = document.getElementById('Soil-PH').value;
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;

                    // Debugging: Log the live location to check if it's correct
                    console.log(`Live location - Latitude: ${latitude}, Longitude: ${longitude}`);
                    
                    const data = {
                nitrogen: nitrogen,
                phosphorus: phosphorus,
                potassium: potassium,
                soilPH: soilPH,
                latitude: latitude,
                longitude: longitude
            };
                    
                    // Send live location to the server
                    fetch('/home', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                          nitrogen: nitrogen,
                phosphorus: phosphorus,
                potassium: potassium,
                soilPH: soilPH,
                latitude: latitude,
                longitude: longitude
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Response from server (live location):', data.message); // Log the server response
                    })
                    .catch(error => {
                        console.error('Error sending live location:', error);
                    });
                }, function(error) {
                    console.error('Error getting live location:', error);
                });
            } else {
                console.error('Geolocation is not supported by this browser.');
            }
        })

    
    if (additionalInfo.style.display === 'none' || additionalInfo.style.display === '') {
      additionalInfo.style.display = 'block';
    } else {
      additionalInfo.style.display = 'none';
    }
  });

  document.getElementById('button2').addEventListener('click',e=>{
    window.location.href="http://localhost:8080/home1"
  })
   </script>
      <script src="script.js"></script>
      <script type="text/javascript">
       function googleTranslateElementInit() {
         new google.translate.TranslateElement(
           { pageLanguage: "en" },
           "google_translate_element"
         );
       }
      </script>
     <script
       type="text/javascript"
       src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"
     ></script>
  </body>
</html>